{
    "swagger": "2.0",
    "info": {
      "version": "v1",
      "title": "Hotspot"
    },
    "basePath": "/",
    "schemes": [
      "http",
      "https"
    ],
    "securityDefinitions":{
      "Bearer":{
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }

  },
    "consumes": [
      "application/json",
      "application/x-www-form-urlencoded",
      "multipart/form-data"
    ],
    "produces": [
      "application/json"
    ],
    "tags": [
      {
        "name": "Admin Onboarding",
        "description": "admin onboarding Api's"
      },
      {
        "name": "Admin Dashboard",
        "description": "admin dashboard Api's"
      },
      {
        "name": "Admin Customer Management",
        "description": "admin customers management Api's"
      },
      {
        "name": "Admin Driver Management",
        "description": "admin drivers management Api's"
      },
      {
        "name": "Admin Restaurant Management",
        "description": "admin restaurant management Api's"
      },
      {
        "name": "Admin Menu Management",
        "description": "admin menu management Api's"
      },
      
      {
        "name": "Admin Order Management",
        "description": "admin order management Api's"
      },

      {
        "name": "Admin notification Management",
        "description": "admin notification management Api's"
      },

      {
        "name": "Admin Fee Settings",
        "description": "admin fee settings Api's"
      },

      {
        "name": "Admin Schedule Settings",
        "description": "admin schedule settings Api's"
      },

      {
        "name": "Admin Earning Management",
        "description": "admin payment settings Api's"
      },
      {
        "name": "Admin Payment Management",
        "description": "admin payment settings Api's"
      },

      {
        "name": "Admin Static Content",
        "description": "admin Static Content Api's"
      },
      {
        "name": "Admin Banner Management",
        "description": "admin banner management Api's"
      },
      
      
      {
        "name": "Customer Signup",
        "description": "customer signup Api's"
      },
      {
        "name": "Customer Login",
        "description": "customer login Api's"
      },
      {
        "name": "Customer Forget Password",
        "description": "customer forget password Api's"
      },
      {
        "name": "Customer Account",
        "description": "customer Account Api's"
      },
      {
        "name": "Customer Hotspot",
        "description": "customer hotspot Api's"
      },
      {
        "name": "Customer Restaurant",
        "description": "customer restaurant Api's"
      },
      {
        "name": "Customer Food",
        "description": "customer food Api's"
      },
      {
        "name": "Customer Cart and Order",
        "description": "customer cart and order Api's"
      },
      {
        "name": "Customer Payment",
        "description": "customer payment Api's"
      },
      {
        "name": "Driver Onboarding",
        "description": "driver onboarding Api's"
      },
      {
        "name": "Driver Account",
        "description": "driver account Api's"
      },
      {
        "name": "Driver Static Content",
        "description": "driver static content Api's"
      },
      {
        "name": "Driver Home Management",
        "description": "driver home management Api's"
      },
      {
        "name": "Driver Earning Management",
        "description": "driver earning management Api's"
      },
      {
        "name": "Website Management",
        "description": "Website Content Api's"
      }

      
      
      
    ],
    "paths": {
        "/admin/login": {
            "post": {
              "tags": [
                "Admin Onboarding"
              ],
              "description": "For admin login",
              "consumes": [
                "application/x-www-form-urlencoded"
              ],
              "parameters": [
                {
                  "name": "email",
                  "in": "formData",
                  "description": "admin email",
                  "default": "",
                  "required": true,
                  "type": "string"
                },
                {
                  "name": "password",
                  "in": "formData",
                  "description": "admin password",
                  "default": "",
                  "required": true,
                  "type": "string"
                }
              ],
              "responses": {}
            }
        },
        "/admin/addNewAdmin": {
            "post": {
            "tags": [
                "Admin Onboarding"
            ],
            "description": "Admin signup",
            "consumes": [
            "application/x-www-form-urlencoded"
            ],
            "parameters": [
                {
                    "name": "passkey",
                    "in": "formData",
                    "description": "admin passkey",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "name",
                    "in": "formData",
                    "description": "admin name",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "email",
                    "in": "formData",
                    "description": "email id",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "password",
                    "in": "formData",
                    "description": "password",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "confirmPassword",
                    "in": "formData",
                    "description": "confirmPassword",
                    "required": true,
                    "type": "string"
                }
                ],
                "responses": {}
            }
        },
        "/admin/forgotPassword": {
            "post": {
              "tags": [
                "Admin Onboarding"
              ],
              "description": "Admin forget password",
              "consumes": [
                "application/x-www-form-urlencoded"
              ],
              "parameters": [
                {
                  "name": "email",
                  "in": "formData",
                  "description": "email id",
                  "required": true,
                  "type": "string"
                }
              ],
              "responses": {}
            }
        },
        "/admin/resetPassword": {
          "post": {
            "tags": [
              "Admin Onboarding"
            ],
            "description": "Admin reset password",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "otp",
                "in": "formData",
                "description": "forget pass otp",
                "required": true,
                "type": "number"
              },
              {
                "name": "email",
                "in": "formData",
                "description": "email id",
                "required": true,
                "type": "string"
              },
              {
                "name": "password",
                "in": "formData",
                "description": "password",
                "required": true,
                "type": "string"
              },
              {
                "name": "confirmPassword",
                "in": "formData",
                "description": "confirmPassword",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/admin/logout": {
          "get": {
            "tags": [
              "Admin Onboarding"
            ],
            "description": "Api to get admin logout",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/admin/uploadImage": {
          "put": {
            "tags": [
              "Admin Onboarding"
            ],
            "description": "Api to upload image",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "image",
                "in": "formData",
                "description": "upload image",
                "required": true,
                "type": "file"
              },
              {
                "name": "folderName",
                "in": "formData",
                "description": "enter folder name",
                "required": true,
                "type": "string",
                "enum":["customer","restaurant","dish","driver","driver_vehicle","driver_license","driver_insurance","agreement_doc","other"]
              }
            ],
            "responses": {}
          }
        },

        "/admin/changePassword": {
          "post": {
            "tags": [
              "Admin Onboarding"
            ],
            "description": "Admin change password",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "old_password",
                "in": "formData",
                "description": "old_password",
                "required": true,
                "type": "string"
              },
              {
                "name": "new_password",
                "in": "formData",
                "description": "new_password",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/updateProfile": {
          "post": {
            "tags": [
              "Admin Onboarding"
            ],
            "description": "Admin change password",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "name",
                "required": true,
                "type": "string"
              },
              {
                "name": "country_code",
                "in": "formData",
                "description": "country_code",
                "required": false,
                "type": "string"
              },
              {
                "name": "profile_picture_url",
                "in": "formData",
                "description": "profile_picture_url",
                "required": false,
                "type": "string"
              },
              {
                "name": "email",
                "in": "formData",
                "description": "email",
                "required": true,
                "type": "string"
              },
              {
                "name": "phone",
                "in": "formData",
                "description": "phone",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getAdminProfile": {
          "get": {
            "tags": [
              "Admin Onboarding"
            ],
            "description": "Api to get admin profile",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/htmlFileUrlToTextConvert": {
          "get": {
            "tags": [
              "Admin Onboarding"
            ],
            "description": "Api to get admin profile",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "file_url",
                "in": "query",
                "description": "file_url",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },








      "/admin/getStaticContents": {
          "get": {
            "tags": [
              "Admin Static Content"
            ],
            "description": "Api to get static content",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
      },

    "/admin/getStaticContentDetails": {
        "get": {
          "tags": [
            "Admin Static Content"
          ],
          "description": "Api to get static content details",
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Enter jwt token for authentication",
              "required": true,
              "type": "string"
            },
            {
              "name": "id",
              "in": "query",
              "description": "id",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {}
        }
    },

    "/admin/updateStaticContent": {
      "post": {
        "tags": [
          "Admin Static Content"
        ],
        "description": "Api to add static content",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "formData",
            "description": "id, If you will provide id then it will update else add",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_url",
            "in": "formData",
            "description": "page_url",
            "required": false,
            "type": "string"
          },
          {
            "name": "video_url",
            "in": "formData",
            "description": "video_url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/admin/getFaqs": {
      "get": {
        "tags": [
          "Admin Static Content"
        ],
        "description": "Api to get faq",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/admin/getFaqQuestions": {
      "get": {
        "tags": [
          "Admin Static Content"
        ],
        "description": "Api to get faq",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "enter faq id",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "current page count to access",
            "required": false,
            "type": "number"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "no of items per page",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {}
      }
    },

    "/admin/addFaq": {
      "post": {
        "tags": [
          "Admin Static Content"
        ],
        "description": "Api to add faq",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "topic_id",
            "in": "formData",
            "description": "topic_id",
            "required": false,
            "type": "number"
          },
          {
            "name": "topic_name",
            "in": "formData",
            "description": "topic_name",
            "required": false,
            "type": "string"
          },
          {
            "name": "question",
            "in": "formData",
            "description": "question",
            "required": true,
            "type": "string"
          },
          {
            "name": "answer",
            "in": "formData",
            "description": "answer",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/admin/deleteFaq": {
      "post": {
        "tags": [
          "Admin Static Content"
        ],
        "description": "Api to delete faq",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "topic_id",
            "in": "formData",
            "description": "topic id to be deleted",
            "required": true,
            "type": "number"
          }

        ],
        "responses": {}
      }
    },

    "/admin/editFaq/{topic_id}": {
      "put": {
        "tags": [
          "Admin Static Content"
        ],
        "description": "Api to edit faq",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "topic_id",
            "in": "path",
            "description": "topic id to be edited",
            "required": true,
            "type": "number"
          },
          {
            "name": "topic",
            "in": "formData",
            "description": "topic name to be edited",
            "required": false,
            "type": "string"
          },
          {
            "name": "question",
            "in": "formData",
            "description": "question to be edited",
            "required": false,
            "type": "string"
          },
          {
            "name": "answer",
            "in": "formData",
            "description": "answer to be edited",
            "required": false,
            "type": "string"
          }

        ],
        "responses": {}
      }
    },

    "/admin/getFaq/{id}": {
      "get": {
        "tags": [
          "Admin Static Content"
        ],
        "description": "Api to get faq",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id for which question answer required",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {}
      }
    },
    "/admin/getFaqTopics": {
      "get": {
        "tags": [
          "Admin Static Content"
        ],
        "description": "Api to get faqsTopics that have questions ",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },











        "/admin/getTotalCustomers": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of customers",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },


        "/admin/getCustomersViaHotspot/{hotspot_id}": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of customers via hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },          {
                "name": "hotspot_id",
                "in": "path",
                "description": "hostspot  id to get customer count",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getTotalRestaurants": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of restaurants",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getTotalDrivers": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of drivers",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },


        "/admin/getDriversViaHotspot/{hotspot_id}": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of drivers via hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },          {
                "name": "hotspot_id",
                "in": "path",
                "description": "hostspot  id to get drivers count ",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getTotalOrders": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of orders",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getHotspotCount": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },


        "/admin/getOrdersViaHotspot/{hotspot_id}": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of orders via hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },          {
                "name": "hotspot_id",
                "in": "path",
                "description": "hostspot  id to get order count",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getProcessingOrdersViaHotspot/{hotspot_id}": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of  preprocessing orders via hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },          {
                "name": "hotspot_id",
                "in": "path",
                "description": "hostspot  id to get order count",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getCompletedOrdersViaHotspot/{hotspot_id}": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of completed orders via hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },          {
                "name": "hotspot_id",
                "in": "path",
                "description": "hostspot  id to get order count",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getProcessingOrders": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of  preprocessing orders",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getCompletedOrder": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total number of completed orders ",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getTotalRevenue": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total revenue",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getTotalRevenueByDate": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total revenue by date",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "start_date",
                "in": "query",
                "description": "YYYY-MM-DD",
                "required": true,
                "type": "string"
              },
              {
                "name": "end_date",
                "in": "query",
                "description": "YYYY-MM-DD",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },


        "/admin/getOrderStats": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total current day month year orders",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },



        "/admin/getTotalRevenueViaHotspot/{hotspot_id}": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total revenue",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "hotspot_id",
                "in": "path",
                "description": "hotspot to get revenue of",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getRevenueStats": {
          "get": {
            "tags": [
              "Admin Dashboard"
            ],
            "description": "Api to get total current day month year revenue",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },













        "/admin/restaurantCategoryList": {
          "get": {
            "tags": [
              "Admin Restaurant Management"
            ],
            "description": "Api to get restaurant category list",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/admin/addRestaurant": {
          "post": {
          "tags": [
              "Admin Restaurant Management"
          ],
          "description": "To add a new restaurant",
          "consumes": [
          "application/x-www-form-urlencoded"
          ],
          "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                  "name": "restaurant_name",
                  "in": "formData",
                  "description": "restaurant name",
                  "required": true,
                  "type": "string"
              },
              {
                  "name": "restaurant_image_url",
                  "in": "formData",
                  "description": "restaurant image url",
                  "required": true,
                  "type": "string"
              },
              {
                  "name": "owner_name",
                  "in": "formData",
                  "description": "owner name",
                  "required": true,
                  "type": "string"
              },
              {
                "name": "role",
                "in": "formData",
                "description": "role",
                "required": true,
                "type": "string"
              },
              {
                  "name": "owner_email",
                  "in": "formData",
                  "description": "owner email",
                  "required": true,
                  "type": "string"
              },
              {
                  "name": "owner_phone",
                  "in": "formData",
                  "description": "owner phone",
                  "required": true,
                  "type": "string"
              },
              {
                  "name": "country_code",
                  "in": "formData",
                  "description": "country code",
                  "required": true,
                  "type": "string"
              },
              {
                "name": "lat",
                "in": "formData",
                "description": "location lattitude",
                "required": true,
                "type": "number"
              },
              {
                "name": "long",
                "in": "formData",
                "description": "location longitude",
                "required": true,
                "type": "number"
              },
              {
                  "name": "address",
                  "in": "formData",
                  "description": "address",
                  "required": true,
                  "type": "string"
              },
              {
                "name": "hotspot_location_ids",
                "in": "formData",
                "description": "[1,2,3,...]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                  "name": "deliveries_per_shift",
                  "in": "formData",
                  "description": "deliveries per shift in number",
                  "required": true,
                  "type": "string"
              },
              {
                  "name": "cut_off_time",
                  "in": "formData",
                  "description": "cut off time in HH:MM:SS",
                  "required": true,
                  "type": "string"
              },
              {
                  "name": "working_hours_from",
                  "in": "formData",
                  "description": "working hours from in HH:MM:SS",
                  "required": true,
                  "type": "string"
              },
              {
                  "name": "working_hours_to",
                  "in": "formData",
                  "description": "working hours to in HH:MM:SS",
                  "required": true,
                  "type": "string"
              },
              {
                  "name": "order_type",
                  "in": "formData",
                  "description": "1: Delivery, 2: Pickup, 3: Both",
                  "required": true,
                  "type": "string",
                  "enum":[1,2,3]
              },
              {
                  "name": "restaurant_category_ids",
                  "in": "formData",
                  "description": "[1,2,3...]",
                  "required": true,
                  "type": "array",
                  "items":{
                    "type":"number"
                  },
                  "minItems": 1
              },
              {
                "name": "agreement_doc_url",
                "in": "formData",
                "description": "agreement_doc_url",
                "required": false,
                "type": "string"
              }
              ],
              "responses": {}
          }
        },
        "/admin/listRestaurant": {
          "get": {
            "tags": [
              "Admin Restaurant Management"
            ],
            "description": "Api to get restaurant list",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "searchKey",
                "in": "query",
                "description": "search restaurant by its name, email, phone, owner name",
                "required": false,
                "type": "string"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
        "/admin/getRestaurant/{restaurantId}": {
          "get": {
            "tags": [
              "Admin Restaurant Management"
            ],
            "description": "Api to get a restaurant by restaurant ID",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "restaurantId",
                "in": "path",
                "description": "restaurant Id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
        "/admin/editRestaurant/{reataurantId}": {
          "put": {
          "tags": [
              "Admin Restaurant Management"
          ],
          "description": "To edit a existing restaurant",
          "consumes": [
          "application/x-www-form-urlencoded"
          ],
          "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "reataurantId",
                "in": "path",
                "description": "restaurant id",
                "required": true,
                "type": "number"
              },
              {
                "name": "restaurant_name",
                "in": "formData",
                "description": "restaurant name",
                "required": true,
                "type": "string"
              },
              {
                "name": "restaurant_image_url",
                "in": "formData",
                "description": "restaurant image url",
                "required": true,
                "type": "string"
              },
              {
                "name": "owner_name",
                "in": "formData",
                "description": "owner name",
                "required": true,
                "type": "string"
              },
              {
                "name": "role",
                "in": "formData",
                "description": "role",
                "required": true,
                "type": "string"
              },
              {
                "name": "owner_email",
                "in": "formData",
                "description": "owner email",
                "required": true,
                "type": "string"
              },
              {
                "name": "owner_phone",
                "in": "formData",
                "description": "owner phone",
                "required": true,
                "type": "string"
              },
              {
                "name": "country_code",
                "in": "formData",
                "description": "country code",
                "required": true,
                "type": "string"
              },
              {
                "name": "lat",
                "in": "formData",
                "description": "location lattitude",
                "required": true,
                "type": "number"
              },
              {
                "name": "long",
                "in": "formData",
                "description": "location longitude",
                "required": true,
                "type": "number"
              },
              {
                "name": "address",
                "in": "formData",
                "description": "address",
                "required": true,
                "type": "string"
              },
              {
                "name": "hotspot_location_ids",
                "in": "formData",
                "description": "[1,2,3,....]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "name": "deliveries_per_shift",
                "in": "formData",
                "description": "deliveries per shift in number",
                "required": true,
                "type": "string"
              },
              {
                "name": "cut_off_time",
                "in": "formData",
                "description": "cut off time in HH:MM:SS",
                "required": true,
                "type": "string"
              },
              {
                "name": "working_hours_from",
                "in": "formData",
                "description": "working hours from in HH:MM:SS",
                "required": true,
                "type": "string"
              },
              {
                "name": "working_hours_to",
                "in": "formData",
                "description": "working hours to in HH:MM:SS",
                "required": true,
                "type": "string"
              },
              {
                "name": "order_type",
                "in": "formData",
                "description": "1: Delivery, 2: Pickup, 3: Both",
                "required": true,
                "type": "string",
                "enum": [
                  1,
                  2,
                  3
                ]
              },
              {
                "name": "restaurant_category_ids",
                "in": "formData",
                "description": "[1,2,3...]",
                "required": true,
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 1
              },
              {
                "name": "agreement_doc_url",
                "in": "formData",
                "description": "agreement_doc_url",
                "required": false,
                "type": "string"
              }
              ],
              "responses": {}
          }
        },
        "/admin/changeRestaurantStatus/{restaurantId}": {
          "put": {
            "tags": [
              "Admin Restaurant Management"
            ],
            "description": "Api to get restaurant status changed",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "restaurantId",
                "in": "path",
                "description": "restaurant id",
                "required": true,
                "type": "string"
              },
              {
                "name": "status",
                "in": "formData",
                "description": "1 for activate, 0 for deactivate",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
        "/admin/deleteRestaurant/{restaurantId}": {
          "delete": {
            "tags": [
              "Admin Restaurant Management"
            ],
            "description": "Api to delete restaurant",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "restaurantId",
                "in": "path",
                "description": "restaurant Id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/dishCategoryList": {
          "get": {
            "tags": [
              "Admin Menu Management"
            ],
            "description": "Api to add new dish",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/addDish": {
          "post": {
            "tags": [
              "Admin Menu Management"
            ],
            "description": "Api to add new dish",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter dish name",
                "required": true,
                "type": "string"
              },
              {
                "name": "price",
                "in": "formData",
                "description": "enter dish price",
                "required": true,
                "type": "number"
              },
              {
                "name": "description",
                "in": "formData",
                "description": "enter dish description",
                "required": true,
                "type": "string"
              },
              {
                "name": "restaurant_id",
                "in": "formData",
                "description": "enter restaurant id",
                "required": true,
                "type": "number"
              },
              {
                "name": "dish_category_id",
                "in": "formData",
                "description": "enter dish category id",
                "required": true,
                "type": "number"
              },
              {
                "name": "image_url",
                "in": "formData",
                "description": "enter dish image url",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        
        "/admin/listDishes/{restaurantId}": {
          "get": {
            "tags": [
              "Admin Menu Management"
            ],
            "description": "Api to get dishes list",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "restaurantId",
                "in": "path",
                "description": "enter the restaurant Id",
                "required": true,
                "type": "number"
              },
              {
                "name": "searchKey",
                "in": "query",
                "description": "search by name, category",
                "required": false,
                "type": "string"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getDish/{dishId}": {
          "get": {
            "tags": [
              "Admin Menu Management"
            ],
            "description": "Api to get a dish by dish Id",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "dishId",
                "in": "path",
                "description": "enter dish Id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
        "/admin/editDish/{dishId}": {
          "put": {
            "tags": [
              "Admin Menu Management"
            ],
            "description": "Api to add new dish",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "dishId",
                "in": "path",
                "description": "dish id",
                "required": true,
                "type": "number"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter dish name",
                "required": true,
                "type": "string"
              },
              {
                "name": "price",
                "in": "formData",
                "description": "enter dish price",
                "required": true,
                "type": "number"
              },
              {
                "name": "description",
                "in": "formData",
                "description": "enter dish description",
                "required": true,
                "type": "string"
              },
              {
                "name": "restaurant_id",
                "in": "formData",
                "description": "enter restaurant id",
                "required": true,
                "type": "number"
              },
              {
                "name": "dish_category_id",
                "in": "formData",
                "description": "enter dish category id",
                "required": true,
                "type": "number"
              },
              {
                "name": "image_url",
                "in": "formData",
                "description": "enter dish image url",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/admin/deleteDish/{dishId}": {
          "delete": {
            "tags": [
              "Admin Menu Management"
            ],
            "description": "Api to delete a dish",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "dishId",
                "in": "path",
                "description": "dish Id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
       

        "/admin/listCustomers": {
          "get": {
            "tags": [
              "Admin Customer Management"
            ],
            "description": "Api to get customers list",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "searchKey",
                "in": "query",
                "description": "search by name, category",
                "required": false,
                "type": "string"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/viewCustomerProfile/{customerId}": {
          "get": {
            "tags": [
              "Admin Customer Management"
            ],
            "description": "Api to get a customer by customer Id",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "customerId",
                "in": "path",
                "description": "enter customer Id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
        "/admin/changeCustomerStatus/{customerId}": {
          "put": {
            "tags": [
              "Admin Customer Management"
            ],
            "description": "Api to get customer status changed",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "customerId",
                "in": "path",
                "description": "customer id",
                "required": true,
                "type": "string"
              },
              {
                "name": "status",
                "in": "formData",
                "description": "1 for activate, 0 for deactivate",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/editCustomer/{customerId}": {
          "put": {
            "tags": [
              "Admin Customer Management"
            ],
            "description": "Api to edit a customer profile",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "customerId",
                "in": "path",
                "description": "enter customer Id",
                "required": true,
                "type": "number"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": false,
                "type": "string"
              },
              {
                "name": "email",
                "in": "formData",
                "description": "enter email",
                "required": false,
                "type": "string"
              },
              {
                "name": "country_code",
                "in": "formData",
                "description": "enter country code eg: +91",
                "required": false,
                "type": "string"
              },
              {
                "name": "phone_no",
                "in": "formData",
                "description": "enter phone",
                "required": false,
                "type": "string"
              },
              {
                "name": "city",
                "in": "formData",
                "description": "enter city",
                "required": false,
                "type": "string"
              },
              {
                "name": "state",
                "in": "formData",
                "description": "enter state",
                "required": false,
                "type": "string"
              },
              {
                "name": "profile_picture_url",
                "in": "formData",
                "description": "enter profile picture url",
                "required": false,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        

        "/admin/deleteCustomer/{customerId}": {
          "delete": {
            "tags": [
              "Admin Customer Management"
            ],
            "description": "Api to delete a customer",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "customerId",
                "in": "path",
                "description": "customer Id",
                "required": true,
                "type": "number"
              },
              {
                "name": "reason",
                "in": "formData",
                "description": "reason of deletion",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },













        "/admin/listDrivers": {
          "get": {
            "tags": [
              "Admin Driver Management"
            ],
            "description": "Api to get drivers list",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "searchKey",
                "in": "query",
                "description": "search by name, category",
                "required": false,
                "type": "string"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getDriverDetails/{driverId}": {
          "get": {
            "tags": [
              "Admin Driver Management"
            ],
            "description": "Api to get driver details",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "driverId",
                "in": "path",
                "description": "enter driver id",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getDriverEarningDetails": {
          "get": {
            "tags": [
              "Admin Driver Management"
            ],
            "description": "Api to get driver details",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "driver_id",
                "in": "query",
                "description": "enter driver id",
                "required": true,
                "type": "number"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": true,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/approveDriver/{driverId}": {
          "put": {
            "tags": [
              "Admin Driver Management"
            ],
            "description": "Api to approve a driver",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "driverId",
                "in": "path",
                "description": "enter driver id",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/changeDriverStatus/{driverId}": {
          "put": {
            "tags": [
              "Admin Driver Management"
            ],
            "description": "Api to change driver status",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "driverId",
                "in": "path",
                "description": "enter driver id",
                "required": true,
                "type": "string"
              },
              {
                "name": "status",
                "in": "formData",
                "description": "1 for activate, 0 for deactivate",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/editDriver/{driverId}": {
          "put": {
            "tags": [
              "Admin Driver Management"
            ],
            "description": "Api to edit driver",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "driverId",
                "in": "path",
                "description": "enter driver id",
                "required": true,
                "type": "string"
              },
              {
                "name": "first_name",
                "in": "formData",
                "description": "enter first name",
                "required": false,
                "type": "string"
              },
              {
                "name": "last_name",
                "in": "formData",
                "description": "enter last name",
                "required": false,
                "type": "string"
              },
              {
                "name": "country_code",
                "in": "formData",
                "description": "enter country_code eg: +91 ",
                "required": false,
                "type": "string"
              },
              {
                "name": "phone_no",
                "in": "formData",
                "description": "enter phone no",
                "required": false,
                "type": "string"
              },
              {
                "name": "dob",
                "in": "formData",
                "description": "enter date of birth: DD-MM-YYYY",
                "required": false,
                "type": "string"
              },
              {
                "name": "gender",
                "in": "formData",
                "description": "enter gender eg: Male | Female",
                "required": false,
                "type": "string"
              },
              {
                "name": "nationality",
                "in": "formData",
                "description": "enter nationality",
                "required": false,
                "type": "string"
              },
              {
                "name": "passport_picture_url",
                "in": "formData",
                "description": "enter passport picture url",
                "required": false,
                "type": "string"
              },
              {
                "name": "address_line1",
                "in": "formData",
                "description": "enter address line1",
                "required": false,
                "type": "string"
              },
              {
                "name": "street",
                "in": "formData",
                "description": "enter street",
                "required": false,
                "type": "string"
              },
              {
                "name": "city",
                "in": "formData",
                "description": "enter city",
                "required": false,
                "type": "string"
              },{
                "name": "state",
                "in": "formData",
                "description": "enter state",
                "required": false,
                "type": "string"
              },{
                "name": "postal_code",
                "in": "formData",
                "description": "enter postal code",
                "required": false,
                "type": "string"
              },{
                "name": "vehicle_type",
                "in": "formData",
                "description": "enter vehicle type",
                "required": false,
                "type": "string"
              },{
                "name": "vehicle_image_url",
                "in": "formData",
                "description": "enter vehicle image url",
                "required": false,
                "type": "string"
              },{
                "name": "plate_number",
                "in": "formData",
                "description": "enter plate number",
                "required": false,
                "type": "string"
              },{
                "name": "vehicle_model",
                "in": "formData",
                "description": "enter vehicle model",
                "required": false,
                "type": "string"
              },{
                "name": "license_number",
                "in": "formData",
                "description": "enter license number",
                "required": false,
                "type": "string"
              },{
                "name": "license_image_url",
                "in": "formData",
                "description": "enter license image url",
                "required": false,
                "type": "string"
              },{
                "name": "insurance_number",
                "in": "formData",
                "description": "enter insurance number",
                "required": false,
                "type": "string"
              },{
                "name": "insurance_image_url",
                "in": "formData",
                "description": "enter insurance image url",
                "required": false,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },










        "/admin/getActiveOrders": {
          "get": {
            "tags": [
              "Admin Order Management"
            ],
            "description": "Api to get active orders",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "searchKey",
                "in": "query",
                "description": "search by name, category",
                "required": false,
                "type": "string"
              },
              {
                "name": "status_filter",
                "in": "query",
                "description": "0: pickup | 1: pending | 2: Driver Allocated",
                "required": false,
                "type": "number"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getScheduledOrders": {
          "get": {
            "tags": [
              "Admin Order Management"
            ],
            "description": "Api to get Scheduled orders",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "searchKey",
                "in": "query",
                "description": "search by name, category",
                "required": false,
                "type": "string"
              },
              {
                "name": "status_filter",
                "in": "query",
                "description": "0: pickup | 1: pending | 2: Driver Allocated",
                "required": false,
                "type": "number"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getCompletedOrders": {
          "get": {
            "tags": [
              "Admin Order Management"
            ],
            "description": "Api to get Completed orders",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "searchKey",
                "in": "query",
                "description": "search by name, category",
                "required": false,
                "type": "string"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getOrderDetails/{orderId}": {
          "get": {
            "tags": [
              "Admin Order Management"
            ],
            "description": "Api to get details of order",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "orderId",
                "in": "path",
                "description": "enter order id",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getDriverListByHotspot": {
          "get": {
            "tags": [
              "Admin Order Management"
            ],
            "description": "Api to get Driver List By Hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "hotspot_location_id",
                "in": "query",
                "description": "hotspot location id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/assignDriver/{orderId}": {
          "put": {
            "tags": [
              "Admin Order Management"
            ],
            "description": "Api to assign driver",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "orderId",
                "in": "path",
                "description": "enter order id",
                "required": true,
                "type": "string"
              },
              {
                "name": "driverId",
                "in": "formData",
                "description": "enter driver id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
















        "/admin/addDriverFee": {
          "post": {
            "tags": [
              "Admin Fee Settings"
            ],
            "description": "Api to add driver fee",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "order_range_from",
                "in": "formData",
                "description": "enter order range from",
                "required": true,
                "type": "number"
              },
              {
                "name": "order_range_to",
                "in": "formData",
                "description": "enter order range to",
                "required": false,
                "type": "number"
              },
              {
                "name": "fee",
                "in": "formData",
                "description": "enter fee",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/editDriverFee": {
          "put": {
            "tags": [
              "Admin Fee Settings"
            ],
            "description": "Api to edit driver fee",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "fee_id",
                "in": "formData",
                "description": "enter fee id",
                "required": true,
                "type": "number"
              },
              {
                "name": "order_range_from",
                "in": "formData",
                "description": "enter order range from",
                "required": false,
                "type": "number"
              },
              {
                "name": "order_range_to",
                "in": "formData",
                "description": "enter order range to",
                "required": false,
                "type": "number"
              },
              {
                "name": "fee",
                "in": "formData",
                "description": "enter fee",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getDriverFeeList": {
          "get": {
            "tags": [
              "Admin Fee Settings"
            ],
            "description": "Api to get driver fee list",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/admin/getDriverFeeById/{fee_id}": {
          "get": {
            "tags": [
              "Admin Fee Settings"
            ],
            "description": "Api to get driver fee by id",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "fee_id",
                "in": "path",
                "description": "enter fee id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/deleteDriverFee/{fee_id}": {
          "delete": {
            "tags": [
              "Admin Fee Settings"
            ],
            "description": "Api to delete driver fee",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "fee_id",
                "in": "path",
                "description": "enter fee id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/editRestaurantFee": {
          "put": {
            "tags": [
              "Admin Fee Settings"
            ],
            "description": "Api to edit Restaurant Fee",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "restaurant_id",
                "in": "formData",
                "description": "enter restaurant id",
                "required": true,
                "type": "number"
              },
              {
                "name": "percentage_fee",
                "in": "formData",
                "description": "percentage fee (%)",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },














        "/admin/listHotspots": {
          "get": {
            "tags": [
              "Admin Schedule Settings"
            ],
            "description": "Api to list all hotspots",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/addHotspot": {
          "post": {
            "tags": [
              "Admin Schedule Settings"
            ],
            "description": "Api to add hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": true,
                "type": "string"
              },
              {
                "name": "location",
                "in": "formData",
                "description": "latitude,longitude || [latitude,longitude]",
                "required": true,
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 2
              },
              {
                "name": "location_detail",
                "in": "formData",
                "description": "enter location detail",
                "required": true,
                "type": "string"
              },
              {
                "name": "city",
                "in": "formData",
                "description": "enter city",
                "required": true,
                "type": "string"
              },
              {
                "name": "state",
                "in": "formData",
                "description": "enter state",
                "required": true,
                "type": "string"
              },
              {
                "name": "country",
                "in": "formData",
                "description": "enter country",
                "required": true,
                "type": "string"
              },
              {
                "name": "postal_code",
                "in": "formData",
                "description": "enter postal code",
                "required": true,
                "type": "string"
              },
              {
                "name": "dropoffs",
                "in": "formData",
                "description": "dropoffs1,dropoffs2,dropoffs3,... || [dropoffs1,dropoffs2,dropoffs3,...]",
                "required": true,
                "type": "array",
                "items": {
                  "type": "staring"
                }
              },
              {
                "name": "delivery_shifts",
                "in": "formData",
                "description": "HH:MM:SS,HH:MM:SS,HH:MM:SS || [HH:MM:SS,HH:MM:SS,HH:MM:SS]",
                "required": true,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 3,
                "maxItems": 3
              },
              {
                "name": "restaurant_ids",
                "in": "formData",
                "description": "1,2,3,... || [1,2,3,...]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "name": "driver_ids",
                "in": "formData",
                "description": "1,2,3,... || [1,2,3,...]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            ],
            "responses": {}
          }
        },
        "/admin/editHotspot/{hotspotLocationId}": {
          "put": {
            "tags": [
              "Admin Schedule Settings"
            ],
            "description": "Api to edit hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "hotspotLocationId",
                "in": "path",
                "description": "enter hotspot location id",
                "required": true,
                "type": "number"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": false,
                "type": "string"
              },
              {
                "name": "location",
                "in": "formData",
                "description": "latitude,longitude || [latitude,longitude]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 2
              },
              {
                "name": "location_detail",
                "in": "formData",
                "description": "enter location detail",
                "required": false,
                "type": "string"
              },
              {
                "name": "city",
                "in": "formData",
                "description": "enter city",
                "required": false,
                "type": "string"
              },
              {
                "name": "state",
                "in": "formData",
                "description": "enter state",
                "required": false,
                "type": "string"
              },
              {
                "name": "country",
                "in": "formData",
                "description": "enter country",
                "required": false,
                "type": "string"
              },
              {
                "name": "postal_code",
                "in": "formData",
                "description": "enter postal code",
                "required": false,
                "type": "string"
              },
              {
                "name": "dropoffs",
                "in": "formData",
                "description": "dropoffs1,dropoffs2,dropoffs3,... || [dropoffs1,dropoffs2,dropoffs3,...]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "name": "delivery_shifts",
                "in": "formData",
                "description": "HH:MM:SS,HH:MM:SS,HH:MM:SS || [HH:MM:SS,HH:MM:SS,HH:MM:SS]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 3,
                "maxItems": 3
              },
              {
                "name": "restaurant_ids",
                "in": "formData",
                "description": "1,2,3,... || [1,2,3,...]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "name": "driver_ids",
                "in": "formData",
                "description": "1,2,3,... || [1,2,3,...]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                }
              }
            ],
            "responses": {}
          }
        },        

        "/admin/getHotspotDetails/{hotspotLocationId}": {
          "get": {
            "tags": [
              "Admin Schedule Settings"
            ],
            "description": "Api to get details of a hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "hotspotLocationId",
                "in": "path",
                "description": "enter hotspot location id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/deleteHotspot/{hotspotLocationId}": {
          "delete": {
            "tags": [
              "Admin Schedule Settings"
            ],
            "description": "Api to delete a hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "hotspotLocationId",
                "in": "path",
                "description": "enter hotspot location id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },













        "/admin/getOrderDeliveries": {
          "get": {
            "tags": [
              "Admin Earning Management"
            ],
            "description": "Api to get order deliveries",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "search_key",
                "in": "query",
                "description": "search key",
                "required": false,
                "type": "string"
              },
              {
                "name": "start_date",
                "in": "query",
                "description": "start date- format: YYYY-DD-MM",
                "required": false,
                "type": "string"
              },
              {
                "name": "end_date",
                "in": "query",
                "description": "end date- format: YYYY-DD-MM",
                "required": false,
                "type": "string"
              },
              {
                "name": "filter_key",
                "in": "query",
                "description": "filter key",
                "required":false,
                "type": "string",
                "enum":["Daily","Weekly","Monthly","Yearly"]
              },
              {
                "name": "page",
                "in": "query",
                "description": "page",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "page size",
                "required": false,
                "type": "number"
              }

            ],
            "responses": {}
          }
        },
        "/admin/getOrderDeliveryDetails": {
          "get": {
            "tags": [
              "Admin Earning Management"
            ],
            "description": "Api to get a order delivery details",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "order_delivery_id",
                "in": "query",
                "description": "order delivery id",
                "required": true,
                "type": "string"
              },
              {
                "name": "page",
                "in": "query",
                "description": "page",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "page size",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
        "/admin/getPickupOrders": {
          "get": {
            "tags": [
              "Admin Earning Management"
            ],
            "description": "Api to get pickup orders",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "search_key",
                "in": "query",
                "description": "search key",
                "required": false,
                "type": "string"
              },
              {
                "name": "start_date",
                "in": "query",
                "description": "start date- format: YYYY-DD-MM",
                "required": false,
                "type": "string"
              },
              {
                "name": "end_date",
                "in": "query",
                "description": "end date- format: YYYY-DD-MM",
                "required": false,
                "type": "string"
              },
              {
                "name": "filter_key",
                "in": "query",
                "description": "filter key",
                "required": false,
                "type": "string",
                "enum": [
                  "Daily",
                  "Weekly",
                  "Monthly",
                  "Yearly"
                ]
              },
              {
                "name": "page",
                "in": "query",
                "description": "page",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "page size",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
        "/admin/getRestaurantEarnings": {
          "get": {
            "tags": [
              "Admin Earning Management"
            ],
            "description": "Api to get Restaurant Earnings",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "search_key",
                "in": "query",
                "description": "search key",
                "required": false,
                "type": "string"
              },
              {
                "name": "start_date",
                "in": "query",
                "description": "start date- format: YYYY-DD-MM",
                "required": false,
                "type": "string"
              },
              {
                "name": "end_date",
                "in": "query",
                "description": "end date- format: YYYY-DD-MM",
                "required": false,
                "type": "string"
              },
              {
                "name": "filter_key",
                "in": "query",
                "description": "filter key",
                "required": false,
                "type": "string",
                "enum": [
                  "Monthly",
                  "Yearly"
                ]
              },
              {
                "name": "page",
                "in": "query",
                "description": "page",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "page size",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
        "/admin/getOrdersByRestaurantIdAndDateRange": {
          "get": {
            "tags": [
              "Admin Earning Management"
            ],
            "description": "Api to get Orders By Restaurant Id And Date Range",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "restaurant_id",
                "in": "query",
                "description": "restaurant id",
                "required": true,
                "type": "number"
              },
              {
                "name": "start_date",
                "in": "query",
                "description": "start date- format: YYYY-DD-MM",
                "required": true,
                "type": "string"
              },
              {
                "name": "end_date",
                "in": "query",
                "description": "end date- format: YYYY-DD-MM",
                "required": true,
                "type": "string"
              },
              {
                "name": "page",
                "in": "query",
                "description": "page",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "page size",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
       "/admin/getDriverEarnings": {
        "get": {
          "tags": [
            "Admin Earning Management"
          ],
          "description": "Api to get Driver Earnings",
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Enter jwt token for authentication",
              "required": true,
              "type": "string"
            },
            {
              "name": "search_key",
              "in": "query",
              "description": "search key",
              "required": false,
              "type": "string"
            },
            {
              "name": "start_date",
              "in": "query",
              "description": "start date- format: YYYY-DD-MM",
              "required": false,
              "type": "string"
            },
            {
              "name": "end_date",
              "in": "query",
              "description": "end date- format: YYYY-DD-MM",
              "required": false,
              "type": "string"
            },
            {
              "name": "filter_key",
              "in": "query",
              "description": "filter key",
              "required": false,
              "type": "string",
              "enum": [
                "Monthly",
                "Yearly"
              ]
            },
            {
              "name": "page",
              "in": "query",
              "description": "page",
              "required": false,
              "type": "number"
            },
            {
              "name": "page_size",
              "in": "query",
              "description": "page size",
              "required": false,
              "type": "number"
            }
          ],
          "responses": {}
        }
      },
      "/admin/getOrdersByDriverIdAndDateRange": {
        "get": {
          "tags": [
            "Admin Earning Management"
          ],
          "description": "Api to get Orders By driver Id And Date Range",
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Enter jwt token for authentication",
              "required": true,
              "type": "string"
            },
            {
              "name": "driver_id",
              "in": "query",
              "description": "driver id",
              "required": true,
              "type": "number"
            },
            {
              "name": "start_date",
              "in": "query",
              "description": "start date- format: YYYY-DD-MM",
              "required": true,
              "type": "string"
            },
            {
              "name": "end_date",
              "in": "query",
              "description": "end date- format: YYYY-DD-MM",
              "required": true,
              "type": "string"
            },
            {
              "name": "page",
              "in": "query",
              "description": "page",
              "required": false,
              "type": "number"
            },
            {
              "name": "page_size",
              "in": "query",
              "description": "page size",
              "required": false,
              "type": "number"
            }
          ],
          "responses": {}
        }
      },




      "/admin/paymentDriver": {
        "post": {
          "tags": [
            "Admin Payment Management"
          ],
          "description": "Api to payment Driver",
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Enter jwt token for authentication",
              "required": true,
              "type": "string"
            },
            {
              "name": "payment_id",
              "in": "formData",
              "description": "payment id",
              "required": true,
              "type": "string"
            },
            {
              "name": "payment_mode",
              "in": "formData",
              "description": "1=>Online/NEFT, 2=>Online/IMPS, 3=>Online/Other, 4=>Offline/Check, 5=>Offline/Cash, 6=>Offline/Other",
              "required": true,
              "type": "number",
              "enum":[1,2,3,4,5,6]
            }
          ],
          "responses": {}
        }
      },


      "/admin/paymentRestaurant": {
        "post": {
          "tags": [
            "Admin Payment Management"
          ],
          "description": "Api to payment Restaurant",
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Enter jwt token for authentication",
              "required": true,
              "type": "string"
            },
            {
              "name": "payment_id",
              "in": "formData",
              "description": "payment id",
              "required": true,
              "type": "string"
            },
            {
              "name": "payment_mode",
              "in": "formData",
              "description": "1=>Online/NEFT, 2=>Online/IMPS, 3=>Online/Other, 4=>Offline/Check, 5=>Offline/Cash, 6=>Offline/Other",
              "required": true,
              "type": "number",
              "enum":[1,2,3,4,5,6]
            }
          ],
          "responses": {}
        }
      },


        "/admin/addNotification": {
          "post": {
            "tags": [
              "Admin notification Management"
            ],
            "description": "Api to add notification",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "title",
                "in": "formData",
                "description": "enter title",
                "required": true,
                "type": "string"
              },
              {
                "name": "description",
                "in": "formData",
                "description": "enter description",
                "required": true,
                "type": "string"
              },
              {
                "name": "reciever_ids",
                "in": "formData",
                "description": "enter reciever_ids : array of integers",
                "required": false,
                "type": "number"
              },
              {
                "name": "type",
                "in": "formData",
                "description": "enter type: 1=> all users, 2=>drivers only, 3=> customers only, 4=> restaurant only",
                "required": true,
                "type": "number",
                "enum":[1,2,3,4]
              }
            ],
            "responses": {}
          }
        },

        "/admin/getNotifications": {
          "get": {
            "tags": [
              "Admin notification Management"
            ],
            "description": "Api to get notification",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": true,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/getNotificationDetails": {
          "get": {
            "tags": [
              "Admin notification Management"
            ],
            "description": "Api to get notification",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "notification_id",
                "in": "query",
                "description": "enter notification id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/deleteNotification": {
          "delete": {
            "tags": [
              "Admin notification Management"
            ],
            "description": "Api to get notification",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "notification_id",
                "in": "query",
                "description": "enter notification id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/listBanners": {
          "get": {
            "tags": [
              "Admin Banner Management"
            ],
            "description": "Api to get banners",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "page",
                "in": "query",
                "description": "current page count to access",
                "required": false,
                "type": "number"
              },
              {
                "name": "page_size",
                "in": "query",
                "description": "no of items per page",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/addBanner": {
          "post": {
            "tags": [
              "Admin Banner Management"
            ],
            "description": "Api to add banner",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name of title",
                "required": true,
                "type": "string"
              },
              {
                "name": "image_url",
                "in": "formData",
                "description": "image url to be uploaded",
                "required": true,
                "type": "string"
              },
              {
                "name": "order",
                "in": "formData",
                "description": "sequence order",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/editBanner/{banner_id}": {
          "put": {
            "tags": [
              "Admin Banner Management"
            ],
            "description": "Api to edit banner",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },{
                "name": "banner_id",
                "in": "path",
                "description": "id of the banner to be edited",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name of title",
                "required": false,
                "type": "string"
              },
              {
                "name": "image_url",
                "in": "formData",
                "description": "image url to be uploaded",
                "required": false,
                "type": "string"
              },
              {
                "name": "order",
                "in": "formData",
                "description": "sequence order",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/admin/deleteBanner/{banner_id}": {
          "delete": {
            "tags": [
              "Admin Banner Management"
            ],
            "description": "Api to delete banner",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },{
                "name": "banner_id",
                "in": "path",
                "description": "id of the banner to be deleted",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },


        "/admin/getBanner/{banner_id}": {
          "get": {
            "tags": [
              "Admin Banner Management"
            ],
            "description": "Api to get banner",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "Authorization",
                "in": "header",
                "description": "Enter jwt token for authentication",
                "required": true,
                "type": "string"
              },{
                "name": "banner_id",
                "in": "path",
                "description": "id of the banner ",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
  







        "/customer/verify-email": {
          "get": {
            "tags": [
              "Customer Signup"
            ],
            "description": "Api to verify customer email",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "email",
                "in": "query",
                "description": "enter email",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/customer/validate-email": {
          "get": {
            "tags": [
              "Customer Signup"
            ],
            "description": "Api to validate customer email",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "email",
                "in": "query",
                "description": "enter email",
                "required": true,
                "type": "string"
              },
              {
                "name": "code",
                "in": "query",
                "description": "enter verification code",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/customer/customer-email-signup": {
          "post": {
            "tags": [
              "Customer Signup"
            ],
            "description": "Api to signup with email and phone",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": true,
                "type": "string"
              },
              {
                "name": "email",
                "in": "formData",
                "description": "enter email",
                "required": true,
                "type": "string"
              },
              {
                "name": "country_code",
                "in": "formData",
                "description": "enter country code",
                "required": true,
                "type": "string"
              },
              {
                "name": "phone",
                "in": "formData",
                "description": "enter phone no",
                "required": true,
                "type": "string"
              },
              {
                "name": "password",
                "in": "formData",
                "description": "enter password",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/customer/verify-phone": {
          "post": {
            "tags": [
              "Customer Signup"
            ],
            "description": "Api to verify customer phone",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "country_code",
                "in": "formData",
                "description": "enter country code",
                "required": true,
                "type": "string"
              },
              {
                "name": "phone",
                "in": "formData",
                "description": "enter phone no",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },
        "/customer/validate-phone": {
          "post": {
            "tags": [
              "Customer Signup"
            ],
            "description": "Api to validate customer phone",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "country_code",
                "in": "formData",
                "description": "enter country code",
                "required": true,
                "type": "string"
              },
              {
                "name": "phone",
                "in": "formData",
                "description": "enter phone no",
                "required": true,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "enter verification code",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },
        "/customer/customer-google-signup": {
          "post": {
            "tags": [
              "Customer Signup"
            ],
            "description": "Api to signup with customer google account",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "google_id",
                "in": "formData",
                "description": "enter google id",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": true,
                "type": "string"
              },
              {
                "name": "email",
                "in": "formData",
                "description": "enter email",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },
        "/customer/customer-facebook-signup": {
          "post": {
            "tags": [
              "Customer Signup"
            ],
            "description": "Api to signup with customer facebook account",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "facebook_id",
                "in": "formData",
                "description": "enter facebook id",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": true,
                "type": "string"
              },
              {
                "name": "email",
                "in": "formData",
                "description": "enter email",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },
        "/customer/customer-apple-signup": {
          "post": {
            "tags": [
              "Customer Signup"
            ],
            "description": "Api to signup with customer apple account",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "apple_id",
                "in": "formData",
                "description": "enter apple id",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": true,
                "type": "string"
              },
              {
                "name": "email",
                "in": "formData",
                "description": "enter email",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },















        "/customer/customer-email-login": {
          "post": {
            "tags": [
              "Customer Login"
            ],
            "description": "Api to login with customer email",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "email",
                "in": "formData",
                "description": "enter email",
                "required": true,
                "type": "string"
              },
              {
                "name": "password",
                "in": "formData",
                "description": "enter password",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },
        "/customer/customer-phone-login": {
          "post": {
            "tags": [
              "Customer Login"
            ],
            "description": "Api to login with customer phone",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "country_code",
                "in": "formData",
                "description": "enter country code",
                "required": true,
                "type": "string"
              },

              {
                "name": "password",
                "in": "formData",
                "description": "enter password",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },
         "/customer/customer-google-login": {
          "post": {
            "tags": [
              "Customer Login"
            ],
            "description": "Api to login with customer google account",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "google_id",
                "in": "formData",
                "description": "enter google id",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": true,
                "type": "string"
              },
              {
                "name": "email",
                "in": "formData",
                "description": "enter email",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },
        "/customer/customer-facebook-login": {
          "post": {
            "tags": [
              "Customer Login"
            ],
            "description": "Api to login with customer facebook account",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "facebook_id",
                "in": "formData",
                "description": "enter facebook id",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": true,
                "type": "string"
              },
              {
                "name": "email",
                "in": "formData",
                "description": "enter email",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },
        "/customer/customer-apple-login": {
          "post": {
            "tags": [
              "Customer Login"
            ],
            "description": "Api to login with customer apple account",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "apple_id",
                "in": "formData",
                "description": "enter apple id",
                "required": true,
                "type": "string"
              },
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": true,
                "type": "string"
              },
              {
                "name": "email",
                "in": "formData",
                "description": "enter email",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },











        "/customer/send-password-reset-code": {
          "post": {
            "tags": [
              "Customer Forget Password"
            ],
            "description": "Api to send password reset code on customer email/phone",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [              
              {
                "name": "emailOrPhone",
                "in": "formData",
                "description": "enter email/phone no",
                "required": true,
                "type": "string"
              },
              {
                "name": "country_code",
                "in": "formData",
                "description": "enter country code (in case of phone no)",
                "required": false,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },
        "/customer/validate-password-reset-code": {
          "post": {
            "tags": [
              "Customer Forget Password"
            ],
            "description": "Api to validate password reset code",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "emailOrPhone",
                "in": "formData",
                "description": "enter email/phone no",
                "required": true,
                "type": "string"
              },
              {
                "name": "country_code",
                "in": "formData",
                "description": "enter country code (in case of phone no)",
                "required": false,
                "type": "string"
              },
              {
                "name": "code",
                "in": "formData",
                "description": "enter verification code",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },

        "/customer/reset-password": {
          "put": {
            "tags": [
              "Customer Forget Password"
            ],
            "description": "Api to validate password reset code",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [
              {
                "name": "emailOrPhone",
                "in": "formData",
                "description": "enter email/phone no",
                "required": true,
                "type": "string"
              },
              {
                "name": "country_code",
                "in": "formData",
                "description": "enter country code (in case of phone no)",
                "required": false,
                "type": "string"
              },
              {
                "name": "password",
                "in": "formData",
                "description": "enter new pasword",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },









        "/customer/update-device-token": {
          "post": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to update customer name",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "device_token",
                "in": "formData",
                "description": "enter device_token",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/customer-profile": {
          "get": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to get profile of the customer",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },

        "/customer/customer-update-name": {
          "put": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to update customer name",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "name",
                "in": "formData",
                "description": "enter name",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/customer-change-password": {
          "put": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to update customer login password",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "newPassword",
                "in": "formData",
                "description": "enter new password",
                "required": true,
                "type": "string"
              },
              {
                "name": "oldPassword",
                "in": "formData",
                "description": "enter current password",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/customer-add-address": {
          "post": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to add customer address",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "hotspot_location_id",
                "in": "formData",
                "description": "enter hotspot location id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/customer/customer-get-address": {
          "get": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to get customer's all addresses",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },

        "/customer/customer-set-default-address": {
          "put": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to set an address as default customer address",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "hotspot_location_id",
                "in": "formData",
                "description": "enter hotspot location id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/customer/customer-feedback": {
          "post": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to get customer's feedback",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "message",
                "in": "formData",
                "description": "enter your feedback",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/customer-change-profile-picture": {
          "put": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to change customer profile picture",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "image",
                "in": "formData",
                "description": "upload profile picture",
                "required": true,
                "type": "file"
              }
            ],
            "responses": {}
          }
        },

        "/customer/customer-toggle-notification": {
          "put": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to toggle customer notification status",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "notification_status",
                "in": "formData",
                "description": "0=> off, 1=> on",
                "required": true,
                "type": "number",
                "enum":[0,1]
              }
            ],
            "responses": {}
          }
        },

        "/customer/get-notification-status": {
          "get": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to get customer notification status",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },

        "/customer/customer-update-email": {
          "put": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to update customer email",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],

            "parameters": [
              {
                "name": "email",
                "in": "formData",
                "description": "enter email",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/customer-update-phone": {
          "put": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to update customer phone",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],   
            
            "security": [
              {
                "Bearer": []
              }
            ],

            "parameters": [
              {
                "name": "country_code",
                "in": "formData",
                "description": "enter country code",
                "required": true,
                "type": "string"
              },
              {
                "name": "phone",
                "in": "formData",
                "description": "enter phone",
                "required": true,
                "type": "string"
              }
            
            ],
            "responses": {}
          }
        },

        "/customer/customer-logout": {
          "delete": {
            "tags": [
              "Customer Account"
            ],
            "description": "Api to update customer phone",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],            
            "parameters": [],
            "responses": {}
          }
        },













        "/customer/get-hotspot-location": {
          "get": {
            "tags": [
              "Customer Hotspot"
            ],
            "description": "Api to get hotspot locations",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "latitude",
                "in": "query",
                "description": "enter latitude",
                "required": false,
                "type": "number"
              },
              {
                "name": "longitude",
                "in": "query",
                "description": "enater longitude",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
        "/customer/check-hotspot-location": {
          "get": {
            "tags": [
              "Customer Hotspot"
            ],
            "description": "Api to check hotspot locations exists or not",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },
        "/customer/get-hotspot-dropoff": {
          "get": {
            "tags": [
              "Customer Hotspot"
            ],
            "description": "Api to get hotspot dropoff locations",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "hotspot_location_id",
                "in": "query",
                "description": "enter hotspot location id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/customer/get-address-dropoff": {
          "get": {
            "tags": [
              "Customer Hotspot"
            ],
            "description": "Api to get address dropoffs",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "hotspot_location_id",
                "in": "query",
                "description": "enter hotspot location id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        
        "/customer/get-default-hotspot": {
          "get": {
            "tags": [
              "Customer Hotspot"
            ],
            "description": "Api to get default hotspot of a customer",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },

        "/customer/set-default-dropoff": {
          "get": {
            "tags": [
              "Customer Hotspot"
            ],
            "description": "Api to set a dropoff as default",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "hotspot_location_id",
                "in": "query",
                "description": "enter hotspot location id",
                "required": true,
                "type": "number"
              },
              {
                "name": "hotspot_dropoff_id",
                "in": "query",
                "description": "enter hotspot dropoff id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },











      
        
        "/customer/set-favorite-restaurant": {
          "post": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to set a restaurant as favorite",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "restaurant_id",
                "in": "formData",
                "description": "enter restaurant id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },
        "/customer/get-food-category": {
          "get": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to get all food categories",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },
        
        
        "/customer/get-favorite-restaurant": {
          "get": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to get favorite restaurants in a hotspot",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "hotspot_location_id",
                "in": "query",
                "description": "enter hotspot location id",
                "required": true,
                "type": "number"
              },
              {
                "name": "delivery_shift",
                "in": "query",
                "description": "enter delivery shift HH:MM:SS",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/customer/get-search-suggestion": {
          "get": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to get search suggestion",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "searchPhrase",
                "in": "query",
                "description": "enter the phrase for search",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        

        "/customer/get-offer-banner": {
          "get": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to get all offer details",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },
        
        
        "/customer/get-hotspot-restaurant-delivery": {
          "post": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to get delivery type restaurants in a hotspot with filter",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "hotspot_location_id",
                "in": "formData",
                "description": "enter hotspot location id",
                "required": true,
                "type": "number"
              },
              {
                "name": "delivery_shift",
                "in": "formData",
                "description": "enter delivery shift HH:MM:SS",
                "required": true,
                "type": "string"
              },
              {
                "name": "customer_location",
                "in": "formData",
                "description": "[latitude,longitude]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 2
              },
              {
                "name": "dish_category_ids",
                "in": "formData",
                "description": "enter dish category id",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "name": "restaurant_category_ids",
                "in": "formData",
                "description": "enter restaurant category ids",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "name": "searchPhrase",
                "in": "formData",
                "description": "enter the phrase for search",
                "required": false,
                "type": "string"
              }
              
            ],
            "responses": {}
          }
        },

        "/customer/get-hotspot-restaurant-pickup": {
          "post": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to get delivery type restaurants in a hotspot with filter",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            "parameters": [
              {
                "name": "customer_location",
                "in": "formData",
                "description": "[latitude,longitude]",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems":2,
                "maxItems":2
              },
              {
                "name": "dish_category_ids",
                "in": "formData",
                "description": "enter dish category id",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "name": "restaurant_category_ids",
                "in": "formData",
                "description": "enter restaurant category ids",
                "required": false,
                "type": "array",
                "items": {
                  "type": "number"
                }
              },
              {
                "name": "searchPhrase",
                "in": "formData",
                "description": "enter the phrase for search",
                "required": false,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/check-default-address": {
          "get": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to check whether default address available or not",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },

        
        "/customer/get-restaurant-category": {
          "get": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to get all restaurant categories",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },

        "/customer/get-restaurant-details": {
          "get": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to get details of a restaurant",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "restaurant_id",
                "in": "query",
                "description": "enter restaurant id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/customer/get-restaurant-schedule": {
          "get": {
            "tags": [
              "Customer Restaurant"
            ],
            "description": "Api to get schedules of restaurant",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "restaurant_id",
                "in": "query",
                "description": "enter restaurant id",
                "required": false,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        
        "/customer/get-food-card-details": {
          "get": {
            "tags": [
              "Customer Food"
            ],
            "description": "Api to get food cards",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "restaurantId",
                "in": "query",
                "description": "restaurant Id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/customer/set-favorite-food": {
          "put": {
            "tags": [
              "Customer Food"
            ],
            "description": "Api to set a dish as favorite",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "restaurant_dish_id",
                "in": "formData",
                "description": "enter restaurant dish id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/customer/get-favorite-food": {
          "get": {
            "tags": [
              "Customer Food"
            ],
            "description": "Api to get all favorite foods",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },

         "/customer/get-food-details/{restaurant_dish_id}": {
          "get": {
            "tags": [
              "Customer Food"
            ],
            "description": "Api to get a dish details",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "restaurant_dish_id",
                "in": "path",
                "description": "enter restaurant dish id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/customer/get-recomended-slides": {
          "get": {
            "tags": [
              "Customer Food"
            ],
            "description": "Api to get recomended slides",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            "parameters": [
              {
                "name": "restaurantId",
                "in": "query",
                "description": "restaurant Id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },













        "/customer/add-to-cart": {
          "post": {
            "tags": [
              "Customer Cart and Order"
            ],
            "description": "Api to add foods to cart",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "restaurant_id",
                "in": "formData",
                "description": "enter restaurant id",
                "required": true,
                "type": "number"
              },
              {
                "name": "restaurant_dish_id",
                "in": "formData",
                "description": "enter restaurant dish id",
                "required": true,
                "type": "number"
              },
              {
                "name": "cart_count",
                "in": "formData",
                "description": "enter the count",
                "required": true,
                "type": "number"
              },
              {
                "name": "dish_add_on_ids",
                "in": "formData",
                "description": "enter dish add-on ids: 1,2,3,...",
                "required": false,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/customer/get-cart/{restaurant_id}/{order_type}": {
          "get": {
            "tags": [
              "Customer Cart and Order"
            ],
            "description": "Api to get cart details",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "restaurant_id",
                "in": "path",
                "description": "enter restaurant id",
                "required": true,
                "type": "number"
              },
              {
                "name": "order_type",
                "in": "path",
                "description": "1=> delivery | 2=> pickup",
                "required": true,
                "type": "string",
                "enum":[1,2]
              }
            ],
            "responses": {}
          }
        },

        "/customer/delete-from-cart/{restaurantDishId}": {
          "delete": {
            "tags": [
              "Customer Cart and Order"
            ],
            "description": "Api to delete item from cart",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            "parameters": [
              {
                "name": "restaurantDishId",
                "in": "path",
                "description": "enter restaurant dish id",
                "required": true,
                "type": "number"
              }
            ],
            "responses": {}
          }
        },

        "/customer/create-order": {
          "post": {
            "tags": [
              "Customer Cart and Order"
            ],
            "description": "Api to create new order",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "restaurant_id",
                "in": "formData",
                "description": "enter restaurant id",
                "required": true,
                "type": "number"
              },
              {
                "name": "cart_ids",
                "in": "formData",
                "description": "enter cart ids: 1,2,3,... || [1,2,3]",
                "required": true,
                "type": "string"
              },
              {
                "name": "amount",
                "in": "formData",
                "description": "enter total amount",
                "required": true,
                "type": "number"
              },
              {
                "name": "tip_amount",
                "in": "formData",
                "description": "enter tip amount (if any)",
                "required": false,
                "type": "number"
              },
              {
                "name": "order_type",
                "in": "formData",
                "description": "1=> delivery | 2=> pickup",
                "required": true,
                "type": "string",
                "enum":[1,2]
              },
              {
                "name": "cooking_instructions",
                "in": "formData",
                "description": "enter cooking_instructions",
                "required": false,
                "type": "string"
              },
              {
                "name": "delivery_datetime",
                "in": "formData",
                "description": "YYYY-MM-DD HH:MM:SS",
                "required": false,
                "type": "string"
              }
              
            ],
            "responses": {}
          }
        },

        "/customer/get-pre-order-info/{order_id}": {
          "get": {
            "tags": [
              "Customer Cart and Order"
            ],
            "description": "Api to get pre order info",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "order_id",
                "in": "path",
                "description": "enter order id",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/set-pickup-time/{orderId}": {
          "put": {
            "tags": [
              "Customer Cart and Order"
            ],
            "description": "Api to set order pickup time",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            "parameters": [
              {
                "name": "orderId",
                "in": "path",
                "description": "enter order id",
                "required": true,
                "type": "string"
              },
              {
                "name": "pickup_datetime",
                "in": "formData",
                "description": "YYYY-MM-DD HH:MM:SS",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/confirm-order-payment/{order_id}": {
          "put": {
            "tags": [
              "Customer Cart and Order"
            ],
            "description": "Api to confirm the order",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "order_id",
                "in": "path",
                "description": "enter order id",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/get-orders": {
          "get": {
            "tags": [
              "Customer Cart and Order"
            ],
            "description": "Api to get all orders of a customer",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            "parameters": [],
            "responses": {}
          }
        },

        "/customer/get-order-details/{orderId}": {
          "get": {
            "tags": [
              "Customer Cart and Order"
            ],
            "description": "Api to get details of order",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            "parameters": [
              {
                "name": "orderId",
                "in": "path",
                "description": "enter order id",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/get-track-status/{orderId}": {
          "get": {
            "tags": [
              "Customer Cart and Order"
            ],
            "description": "Api to track status of an order",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            "parameters": [
              {
                "name": "orderId",
                "in": "path",
                "description": "enter order id",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },













        "/customer/add-payment-card": {
          "post": {
            "tags": [
              "Customer Payment"
            ],
            "description": "Api to add new payment card",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "name_on_card",
                "in": "formData",
                "description": "enter name as on card",
                "required": true,
                "type": "string"
              },
              {
                "name": "card_number",
                "in": "formData",
                "description": "enter card number (length: 12-19 )",
                "required": true,
                "type": "string"
              },
              {
                "name": "card_exp_month",
                "in": "formData",
                "description": "enter card expiry month eg: 01",
                "required": true,
                "type": "string"
              },
              {
                "name": "card_exp_year",
                "in": "formData",
                "description": "enter card expiry year eg: 2030",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        

        "/customer/get-payment-card/{payment_card_id}": {
          "get": {
            "tags": [
              "Customer Payment"
            ],
            "description": "Api to get a payment card",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "payment_card_id",
                "in": "path",
                "description": "enter payment card id",
                "required": true,
                "type": "number"
              }
                ],
            "responses": {}
          }
        },

        "/customer/get-payment-cards": {
          "get": {
            "tags": [
              "Customer Payment"
            ],
            "description": "Api to get all payment cards",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [],
            "responses": {}
          }
        },

        "/customer/update-payment-card/{payment_card_id}": {
          "put": {
            "tags": [
              "Customer Payment"
            ],
            "description": "Api to update new payment card",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "payment_card_id",
                "in": "path",
                "description": "enter payment card id",
                "required": true,
                "type": "number"
              },
              {
                "name": "name_on_card",
                "in": "formData",
                "description": "enter name as on card",
                "required": true,
                "type": "string"
              },
              {
                "name": "card_number",
                "in": "formData",
                "description": "enter card number (length: 12-19 )",
                "required": true,
                "type": "string"
              },
              {
                "name": "card_exp_month",
                "in": "formData",
                "description": "enter card expiry month eg: 01",
                "required": true,
                "type": "string"
              },
              {
                "name": "card_exp_year",
                "in": "formData",
                "description": "enter card expiry year eg: 2030",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },

        "/customer/set-default-payment-card/{payment_card_id}": {
          "put": {
            "tags": [
              "Customer Payment"
            ],
            "description": "Api to set a payment card as default",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "payment_card_id",
                "in": "path",
                "description": "enter payment card id",
                "required": true,
                "type": "number"
              }
                ],
            "responses": {}
          }
        },

        "/customer/delete-payment-card/{payment_card_id}": {
          "delete": {
            "tags": [
              "Customer Payment"
            ],
            "description": "Api to delete a payment card",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "payment_card_id",
                "in": "path",
                "description": "enter payment card id",
                "required": true,
                "type": "number"
              }
                ],
            "responses": {}
          }
        },

        "/customer/payment": {
          "post": {
            "tags": [
              "Customer Payment"
            ],
            "description": "Api for payment",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            
            "parameters": [
              {
                "name": "name_on_card",
                "in": "formData",
                "description": "enter name as on card",
                "required": true,
                "type": "string"
              },
              {
                "name": "card_number",
                "in": "formData",
                "description": "enter card number (length: 12-19 )",
                "required": true,
                "type": "string"
              },
              {
                "name": "card_exp_month",
                "in": "formData",
                "description": "enter card expiry month eg: 01",
                "required": true,
                "type": "string"
              },
              {
                "name": "card_exp_year",
                "in": "formData",
                "description": "enter card expiry year eg: 2030",
                "required": true,
                "type": "string"
              },
              {
                "name": "card_cvc",
                "in": "formData",
                "description": "enter card cvc",
                "required": true,
                "type": "string"
              },
              {
                "name": "amount",
                "in": "formData",
                "description": "enter amount",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },
        "/customer/save-payment-info": {
          "put": {
            "tags": [
              "Customer Payment"
            ],
            "description": "Api for save payment info",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "security": [
              {
                "Bearer": []
              }
            ],
            "parameters": [
              {
                "name": "order_id",
                "in": "formData",
                "description": "enter order id",
                "required": true,
                "type": "string"
              },
              {
                "name": "transaction_id",
                "in": "formData",
                "description": "enter transaction id",
                "required": false,
                "type": "string"
              }
            ],
            "responses": {}
          }
        },






        "/driver/login": {
          "post": {
            "tags": [
              "Driver Onboarding"
            ],
            "description": "For driver login",
            "consumes": [
              "application/x-www-form-urlencoded"
            ],
            "parameters": [
              {
                "name": "phone_or_email",
                "in": "formData",
                "description": "enter phone or driver id",
                "default": "",
                "required": true,
                "type": "string"
              },
              {
                "name": "password",
                "in": "formData",
                "description": "enter password",
                "default": "",
                "required": true,
                "type": "string"
              }
            ],
            "responses": {}
          }
      },

      "/driver/logout": {
        "get": {
          "tags": [
            "Driver Onboarding"
          ],
          "description": "Api to get driver logout",
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "parameters": [
            {
              "name": "Authorization",
              "in": "header",
              "description": "Enter jwt token for authentication",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {}
        }
      },

      "/driver/forgotPassword": {
        "post": {
          "tags": [
            "Driver Onboarding"
          ],
          "description": "For driver login",
          "consumes": [
            "application/x-www-form-urlencoded"
          ],
          "parameters": [
            {
              "name": "phone",
              "in": "formData",
              "description": "enter phone",
              "default": "",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {}
        }
    },

    "/driver/verifyOTP": {
      "post": {
        "tags": [
          "Driver Onboarding"
        ],
        "description": "For driver login",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "formData",
            "description": "enter phone",
            "required": true,
            "type": "string"
          },
          {
            "name": "otp",
            "in": "formData",
            "description": "enter otp",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {}
      }
    },

    "/driver/resetPassword": {
      "post": {
        "tags": [
          "Driver Onboarding"
        ],
        "description": "For driver login",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "phone",
            "in": "formData",
            "description": "enter phone",
            "required": true,
            "type": "string"
          },
          {
            "name": "new_password",
            "in": "formData",
            "description": "new password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/changePassword": {
      "post": {
        "tags": [
          "Driver Onboarding"
        ],
        "description": "For driver change password",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "old_password",
            "in": "formData",
            "description": "old_password",
            "required": true,
            "type": "string"
          },
          {
            "name": "new_password",
            "in": "formData",
            "description": "new_password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/signUpStep1": {
      "post": {
        "tags": [
          "Driver Onboarding"
        ],
        "description": "For driver sign Up Step 1",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "phone_no",
            "in": "formData",
            "description": "enter phone_no",
            "required": true,
            "type": "number"
          },
          {
            "name": "country_code",
            "in": "formData",
            "description": "enter country_code",
            "required": true,
            "type": "string"
          },
          {
            "name": "referral_code",
            "in": "formData",
            "description": "enter referral_code",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "enter password",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/signUpDetailsStep1": {
      "post": {
        "tags": [
          "Driver Onboarding"
        ],
        "description": "For driver sign Up Details Step 1",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile_picture_url",
            "in": "formData",
            "description": "enter profile_picture_url",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "formData",
            "description": "enter first_name",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "formData",
            "description": "enter last_name",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "enter email",
            "required": false,
            "type": "string"
          },
          {
            "name": "dob",
            "in": "formData",
            "description": "enter dob",
            "required": false,
            "type": "string"
          },
          {
            "name": "gender",
            "in": "formData",
            "description": "enter gender",
            "required": false,
            "type": "string"
          },
          {
            "name": "nationality",
            "in": "formData",
            "description": "enter nationality",
            "required": false,
            "type": "string"
          },
          {
            "name": "passport_picture_url",
            "in": "formData",
            "description": "enter passport_picture_url",
            "required": false,
            "type": "string"
          },
          {
            "name": "passport_number",
            "in": "formData",
            "description": "enter passport_number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/signUpDetailsStep2": {
      "post": {
        "tags": [
          "Driver Onboarding"
        ],
        "description": "For driver sign Up Details Step 2",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "address_line1",
            "in": "formData",
            "description": "enter address_line1",
            "required": false,
            "type": "string"
          },
          {
            "name": "street",
            "in": "formData",
            "description": "enter street",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "enter city",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "formData",
            "description": "enter state",
            "required": false,
            "type": "string"
          },
          {
            "name": "postal_code",
            "in": "formData",
            "description": "enter postal_code",
            "required": false,
            "type": "string"
          },
          {
            "name": "bank_name",
            "in": "formData",
            "description": "enter bank_name",
            "required": false,
            "type": "string"
          },
          {
            "name": "account_number",
            "in": "formData",
            "description": "enter account_number",
            "required": false,
            "type": "string"
          },
          {
            "name": "account_holder_name",
            "in": "formData",
            "description": "enter account_holder_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/signUpDetailsStep3": {
      "post": {
        "tags": [
          "Driver Onboarding"
        ],
        "description": "For driver sign Up Details Step 3",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "vehicle_type",
            "in": "formData",
            "description": "enter vehicle_type",
            "required": false,
            "type": "number"
          },
          {
            "name": "image_url",
            "in": "formData",
            "description": "enter image_url",
            "required": false,
            "type": "string"
          },
          {
            "name": "plate_number",
            "in": "formData",
            "description": "enter plate_number",
            "required": false,
            "type": "string"
          },
          {
            "name": "vehicle_model",
            "in": "formData",
            "description": "enter vehicle_model",
            "required": false,
            "type": "string"
          },
          {
            "name": "license_number",
            "in": "formData",
            "description": "enter license_number",
            "required": false,
            "type": "string"
          },
          {
            "name": "license_image_url",
            "in": "formData",
            "description": "enter license_image_url",
            "required": false,
            "type": "string"
          },
          {
            "name": "insurance_number",
            "in": "formData",
            "description": "enter insurance_number",
            "required": false,
            "type": "string"
          },
          {
            "name": "insurance_image_url",
            "in": "formData",
            "description": "enter insurance_image_url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },


    "/driver/editDriverPersonalDetails": {
      "put": {
        "tags": [
          "Driver Account"
        ],
        "description": "For editing driver personal details",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "profile_picture_url",
            "in": "formData",
            "description": "enter profile_picture_url",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "formData",
            "description": "enter first_name",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "formData",
            "description": "enter last_name",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "enter email",
            "required": false,
            "type": "string"
          },
          {
            "name": "country_code",
            "in": "formData",
            "description": "enter country code",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone_no",
            "in": "formData",
            "description": "enter phone_no",
            "required": false,
            "type": "string"
          },
          {
            "name": "dob",
            "in": "formData",
            "description": "enter dob",
            "required": false,
            "type": "string"
          },
          {
            "name": "gender",
            "in": "formData",
            "description": "enter gender",
            "required": false,
            "type": "string"
          },
          {
            "name": "nationality",
            "in": "formData",
            "description": "enter nationality",
            "required": false,
            "type": "string"
          },
          {
            "name": "passport_picture_url",
            "in": "formData",
            "description": "enter passport_picture_url",
            "required": false,
            "type": "string"
          },
          {
            "name": "passport_number",
            "in": "formData",
            "description": "enter passport_number",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/getDriverPersonalDetails": {
      "get": {
        "tags": [
          "Driver Account"
        ],
        "description": "For getting driver personal details",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/editDriverAddressDetails": {
      "put": {
        "tags": [
          "Driver Account"
        ],
        "description": "For editing drivers address and bank details",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "address_line1",
            "in": "formData",
            "description": "enter address_line1",
            "required": false,
            "type": "string"
          },
          {
            "name": "street",
            "in": "formData",
            "description": "enter street",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "formData",
            "description": "enter city",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "formData",
            "description": "enter state",
            "required": false,
            "type": "string"
          },
          {
            "name": "postal_code",
            "in": "formData",
            "description": "enter postal_code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/getDriverAddressDetails": {
      "get": {
        "tags": [
          "Driver Account"
        ],
        "description": "For getting driver address details",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/editDriverVehicleDetails": {
      "put": {
        "tags": [
          "Driver Account"
        ],
        "description": "For editing driver vehicle details",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "vehicle_type",
            "in": "formData",
            "description": "enter vehicle_type",
            "required": false,
            "type": "number"
          },
          {
            "name": "image_url",
            "in": "formData",
            "description": "enter image_url",
            "required": false,
            "type": "string"
          },
          {
            "name": "plate_number",
            "in": "formData",
            "description": "enter plate_number",
            "required": false,
            "type": "string"
          },
          {
            "name": "vehicle_model",
            "in": "formData",
            "description": "enter vehicle_model",
            "required": false,
            "type": "string"
          },
          {
            "name": "license_number",
            "in": "formData",
            "description": "enter license_number",
            "required": false,
            "type": "string"
          },
          {
            "name": "license_image_url",
            "in": "formData",
            "description": "enter license_image_url",
            "required": false,
            "type": "string"
          },
          {
            "name": "insurance_number",
            "in": "formData",
            "description": "enter insurance_number",
            "required": false,
            "type": "string"
          },
          {
            "name": "insurance_image_url",
            "in": "formData",
            "description": "enter insurance_image_url",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/getDriverVehicleDetails": {
      "get": {
        "tags": [
          "Driver Account"
        ],
        "description": "For getting driver vehicle details",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },


    "/driver/editDriverBankDetails": {
      "put": {
        "tags": [
          "Driver Account"
        ],
        "description": "For editing driver bank details",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "bank_type",
            "in": "formData",
            "description": "enter bank_type",
            "required": false,
            "type": "string"
          },
          {
            "name": "account_number",
            "in": "formData",
            "description": "enter account_number",
            "required": false,
            "type": "string"
          },
          {
            "name": "account_holder_name",
            "in": "formData",
            "description": "enter account_holder_name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/getDriverBankDetails": {
      "get": {
        "tags": [
          "Driver Account"
        ],
        "description": "For getting driver bank details",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/getSupportFaq/{topic_id}": {
      "get": {
        "tags": [
          "Driver Static Content"
        ],
        "description": "Api to get help and support faq's",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "topic_id",
            "in": "path",
            "description": "topic id of help and supportfor which question answer required",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {}
      }
    },

    "/driver/getStaticContent/{id}": {
      "get": {
        "tags": [
          "Driver Static Content"
        ],
        "description": "Api to get static content for aboutUs,privacyPolicy etc",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id to get static contents",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {}
      }
    },





    "/driver/getPickupCards": {
      "get": {
        "tags": [
          "Driver Home Management"
        ],
        "description": "Api to get pickup cards",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "description": "date- format: YYYY-DD-MM",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },


    "/driver/getPickupDetails/{pickup_id}": {
      "get": {
        "tags": [
          "Driver Home Management"
        ],
        "description": "Api to get pickups ",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "pickup_id",
            "in": "path",
            "description": "order id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/confirmPickup/{pickup_id}": {
      "put": {
        "tags": [
          "Driver Home Management"
        ],
        "description": "Api to confirm pickups",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "pickup_id",
            "in": "path",
            "description": "order pickup id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

"/driver/getDeliveryCards": {
  "get": {
    "tags": [
      "Driver Home Management"
    ],
    "description": "Api to get delivery cards",
    "consumes": [
      "application/x-www-form-urlencoded"
    ],
    "parameters": [
      {
        "name": "Authorization",
        "in": "header",
        "description": "Enter jwt token for authentication",
        "required": true,
        "type": "string"
      },
      {
        "name": "date",
        "in": "query",
        "description": "date- format: YYYY-DD-MM",
        "required": true,
        "type": "string"
      }
    ],
    "responses": {}
  }
},
"/driver/getDeliveryDetails/{delivery_id}": {
  "get": {
    "tags": [
      "Driver Home Management"
    ],
    "description": "Api to get delivery details",
    "consumes": [
      "application/x-www-form-urlencoded"
    ],
    "parameters": [
      {
        "name": "Authorization",
        "in": "header",
        "description": "Enter jwt token for authentication",
        "required": true,
        "type": "string"
      },
      {
        "name": "delivery_id",
        "in": "path",
        "description": "delivery id",
        "required": true,
        "type": "string"
      }
    ],
    "responses": {}
  }
},
"/driver/getOrdersByDropOffId": {
  "get": {
    "tags": [
      "Driver Home Management"
    ],
    "description": "get Orders By DropOff Id",
    "consumes": [
      "application/x-www-form-urlencoded"
    ],
    "parameters": [
      {
        "name": "Authorization",
        "in": "header",
        "description": "Enter jwt token for authentication",
        "required": true,
        "type": "string"
      },
      {
        "name": "delivery_id",
        "in": "query",
        "description": "delivery id",
        "required": true,
        "type": "string"
      },
      {
        "name": "dropoff_id",
        "in": "query",
        "description": "dropoff id",
        "required": true,
        "type": "number"
      }
    ],
    "responses": {}
  }
},
"/driver/confirmDelivery": {
  "put": {
    "tags": [
      "Driver Home Management"
    ],
    "description": "Api to confirm delivery",
    "consumes": [
      "application/x-www-form-urlencoded"
    ],
    "parameters": [
      {
        "name": "Authorization",
        "in": "header",
        "description": "Enter jwt token for authentication",
        "required": true,
        "type": "string"
      },
      {
        "name": "delivery_id",
        "in": "formData",
        "description": "delivery id",
        "required": true,
        "type": "string"
      },
      {
        "name": "deliveries",
        "in": "formData",
        "description": "deliveries",
        "required": true,
        "type": "array",
        "items": {
          "type": "object",
          "properties":{
            "dropoff_id":{
              "type":"string"
            },
            "image":{
              "type":"string"
            }
          }
        }
      }
    ],
    "responses": {}
  }
},
    





    "/driver/getEarningList": {
      "get": {
        "tags": [
          "Driver Earning Management"
        ],
        "description": "Api to get earning list",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "enter type, 0=> pending, 1=> collected",
            "required": true,
            "type": "number",
            "enum":[0,1]
          },
          {
            "name": "customer_location_latitude",
            "in": "query",
            "description": "enter latitude coordinate",
            "required": false,
            "type": "number"
          },
          {
            "name": "customer_location_longitude",
            "in": "query",
            "description": "enter longitude coordinate",
            "required": false,
            "type": "number"
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "enter start_date, YYYY-MM-DD",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "enter end_date, YYYY-MM-DD",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "current page count to access",
            "required": true,
            "type": "number"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "no of items per page",
            "required": true,
            "type": "number"
          }

        ],
        "responses": {}
      }
    },


    "/driver/getTotalEarnings": {
      "get": {
        "tags": [
          "Driver Earning Management"
        ],
        "description": "Api to get total earnings",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "enter type, 0=> pending, 1=> paid",
            "required": true,
            "type": "number",
            "enum":[0,1]
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "enter start_date, YYYY-MM-DD",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "enter end_date, YYYY-MM-DD",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {}
      }
    },

    "/driver/getDeliveryHistory": {
      "get": {
        "tags": [
          "Driver Earning Management"
        ],
        "description": "Api to get delivery history",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "enter start_date, YYYY-MM-DD",
            "required": false,
            "type": "string"
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "enter end_date, YYYY-MM-DD",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "current page count to access",
            "required": true,
            "type": "number"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "no of items per page",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {}
      }
    },

    "/driver/getEarningDetails": {
      "get": {
        "tags": [
          "Driver Earning Management"
        ],
        "description": "Api to get earning details",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter jwt token for authentication",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "enter id",
            "required": true,
            "type": "number"
          },
          {
            "name": "type",
            "in": "query",
            "description": "enter type, 0=> pending, 1=> collected",
            "required": true,
            "type": "number",
            "enum":[0,1]
          }
        ],
        "responses": {}
      }
    },





    "/website/getFaqTopics": {
      "get": {
        "tags": [
          "Website Management"
        ],
        "description": "Api to get faqsTopics that have questions ",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
        ],
        "responses": {}
      }
    },

    "/website/getFaqDetails": {
      "get": {
        "tags": [
          "Website Management"
        ],
        "description": "Api to get faq",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "enter faq id",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "current page count to access",
            "required": false,
            "type": "number"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "no of items per page",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {}
      }
    },

    "/website/getStaticContent/{id}": {
      "post": {
        "tags": [
          "Website Management"
        ],
        "description": "Api to get static content details",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id to get details",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    }








    }
}